// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mmult_mmult_Pipeline_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_systolic_AWVALID,
        m_axi_systolic_AWREADY,
        m_axi_systolic_AWADDR,
        m_axi_systolic_AWID,
        m_axi_systolic_AWLEN,
        m_axi_systolic_AWSIZE,
        m_axi_systolic_AWBURST,
        m_axi_systolic_AWLOCK,
        m_axi_systolic_AWCACHE,
        m_axi_systolic_AWPROT,
        m_axi_systolic_AWQOS,
        m_axi_systolic_AWREGION,
        m_axi_systolic_AWUSER,
        m_axi_systolic_WVALID,
        m_axi_systolic_WREADY,
        m_axi_systolic_WDATA,
        m_axi_systolic_WSTRB,
        m_axi_systolic_WLAST,
        m_axi_systolic_WID,
        m_axi_systolic_WUSER,
        m_axi_systolic_ARVALID,
        m_axi_systolic_ARREADY,
        m_axi_systolic_ARADDR,
        m_axi_systolic_ARID,
        m_axi_systolic_ARLEN,
        m_axi_systolic_ARSIZE,
        m_axi_systolic_ARBURST,
        m_axi_systolic_ARLOCK,
        m_axi_systolic_ARCACHE,
        m_axi_systolic_ARPROT,
        m_axi_systolic_ARQOS,
        m_axi_systolic_ARREGION,
        m_axi_systolic_ARUSER,
        m_axi_systolic_RVALID,
        m_axi_systolic_RREADY,
        m_axi_systolic_RDATA,
        m_axi_systolic_RLAST,
        m_axi_systolic_RID,
        m_axi_systolic_RFIFONUM,
        m_axi_systolic_RUSER,
        m_axi_systolic_RRESP,
        m_axi_systolic_BVALID,
        m_axi_systolic_BREADY,
        m_axi_systolic_BRESP,
        m_axi_systolic_BID,
        m_axi_systolic_BUSER,
        sext_ln108,
        localB_address0,
        localB_ce0,
        localB_we0,
        localB_d0,
        localB_1_address0,
        localB_1_ce0,
        localB_1_we0,
        localB_1_d0,
        localB_2_address0,
        localB_2_ce0,
        localB_2_we0,
        localB_2_d0,
        localB_3_address0,
        localB_3_ce0,
        localB_3_we0,
        localB_3_d0,
        localB_4_address0,
        localB_4_ce0,
        localB_4_we0,
        localB_4_d0,
        localB_5_address0,
        localB_5_ce0,
        localB_5_we0,
        localB_5_d0,
        localB_6_address0,
        localB_6_ce0,
        localB_6_we0,
        localB_6_d0,
        localB_7_address0,
        localB_7_ce0,
        localB_7_we0,
        localB_7_d0,
        localB_8_address0,
        localB_8_ce0,
        localB_8_we0,
        localB_8_d0,
        localB_9_address0,
        localB_9_ce0,
        localB_9_we0,
        localB_9_d0,
        localB_10_address0,
        localB_10_ce0,
        localB_10_we0,
        localB_10_d0,
        localB_11_address0,
        localB_11_ce0,
        localB_11_we0,
        localB_11_d0,
        localB_12_address0,
        localB_12_ce0,
        localB_12_we0,
        localB_12_d0,
        localB_13_address0,
        localB_13_ce0,
        localB_13_we0,
        localB_13_d0,
        localB_14_address0,
        localB_14_ce0,
        localB_14_we0,
        localB_14_d0,
        localB_15_address0,
        localB_15_ce0,
        localB_15_we0,
        localB_15_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_systolic_AWVALID;
input   m_axi_systolic_AWREADY;
output  [63:0] m_axi_systolic_AWADDR;
output  [0:0] m_axi_systolic_AWID;
output  [31:0] m_axi_systolic_AWLEN;
output  [2:0] m_axi_systolic_AWSIZE;
output  [1:0] m_axi_systolic_AWBURST;
output  [1:0] m_axi_systolic_AWLOCK;
output  [3:0] m_axi_systolic_AWCACHE;
output  [2:0] m_axi_systolic_AWPROT;
output  [3:0] m_axi_systolic_AWQOS;
output  [3:0] m_axi_systolic_AWREGION;
output  [0:0] m_axi_systolic_AWUSER;
output   m_axi_systolic_WVALID;
input   m_axi_systolic_WREADY;
output  [511:0] m_axi_systolic_WDATA;
output  [63:0] m_axi_systolic_WSTRB;
output   m_axi_systolic_WLAST;
output  [0:0] m_axi_systolic_WID;
output  [0:0] m_axi_systolic_WUSER;
output   m_axi_systolic_ARVALID;
input   m_axi_systolic_ARREADY;
output  [63:0] m_axi_systolic_ARADDR;
output  [0:0] m_axi_systolic_ARID;
output  [31:0] m_axi_systolic_ARLEN;
output  [2:0] m_axi_systolic_ARSIZE;
output  [1:0] m_axi_systolic_ARBURST;
output  [1:0] m_axi_systolic_ARLOCK;
output  [3:0] m_axi_systolic_ARCACHE;
output  [2:0] m_axi_systolic_ARPROT;
output  [3:0] m_axi_systolic_ARQOS;
output  [3:0] m_axi_systolic_ARREGION;
output  [0:0] m_axi_systolic_ARUSER;
input   m_axi_systolic_RVALID;
output   m_axi_systolic_RREADY;
input  [511:0] m_axi_systolic_RDATA;
input   m_axi_systolic_RLAST;
input  [0:0] m_axi_systolic_RID;
input  [8:0] m_axi_systolic_RFIFONUM;
input  [0:0] m_axi_systolic_RUSER;
input  [1:0] m_axi_systolic_RRESP;
input   m_axi_systolic_BVALID;
output   m_axi_systolic_BREADY;
input  [1:0] m_axi_systolic_BRESP;
input  [0:0] m_axi_systolic_BID;
input  [0:0] m_axi_systolic_BUSER;
input  [57:0] sext_ln108;
output  [3:0] localB_address0;
output   localB_ce0;
output   localB_we0;
output  [31:0] localB_d0;
output  [3:0] localB_1_address0;
output   localB_1_ce0;
output   localB_1_we0;
output  [31:0] localB_1_d0;
output  [3:0] localB_2_address0;
output   localB_2_ce0;
output   localB_2_we0;
output  [31:0] localB_2_d0;
output  [3:0] localB_3_address0;
output   localB_3_ce0;
output   localB_3_we0;
output  [31:0] localB_3_d0;
output  [3:0] localB_4_address0;
output   localB_4_ce0;
output   localB_4_we0;
output  [31:0] localB_4_d0;
output  [3:0] localB_5_address0;
output   localB_5_ce0;
output   localB_5_we0;
output  [31:0] localB_5_d0;
output  [3:0] localB_6_address0;
output   localB_6_ce0;
output   localB_6_we0;
output  [31:0] localB_6_d0;
output  [3:0] localB_7_address0;
output   localB_7_ce0;
output   localB_7_we0;
output  [31:0] localB_7_d0;
output  [3:0] localB_8_address0;
output   localB_8_ce0;
output   localB_8_we0;
output  [31:0] localB_8_d0;
output  [3:0] localB_9_address0;
output   localB_9_ce0;
output   localB_9_we0;
output  [31:0] localB_9_d0;
output  [3:0] localB_10_address0;
output   localB_10_ce0;
output   localB_10_we0;
output  [31:0] localB_10_d0;
output  [3:0] localB_11_address0;
output   localB_11_ce0;
output   localB_11_we0;
output  [31:0] localB_11_d0;
output  [3:0] localB_12_address0;
output   localB_12_ce0;
output   localB_12_we0;
output  [31:0] localB_12_d0;
output  [3:0] localB_13_address0;
output   localB_13_ce0;
output   localB_13_we0;
output  [31:0] localB_13_d0;
output  [3:0] localB_14_address0;
output   localB_14_ce0;
output   localB_14_we0;
output  [31:0] localB_14_d0;
output  [3:0] localB_15_address0;
output   localB_15_ce0;
output   localB_15_we0;
output  [31:0] localB_15_d0;

reg ap_idle;
reg m_axi_systolic_RREADY;
reg localB_ce0;
reg localB_we0;
reg localB_1_ce0;
reg localB_1_we0;
reg localB_2_ce0;
reg localB_2_we0;
reg localB_3_ce0;
reg localB_3_we0;
reg localB_4_ce0;
reg localB_4_we0;
reg localB_5_ce0;
reg localB_5_we0;
reg localB_6_ce0;
reg localB_6_we0;
reg localB_7_ce0;
reg localB_7_we0;
reg localB_8_ce0;
reg localB_8_we0;
reg localB_9_ce0;
reg localB_9_we0;
reg localB_10_ce0;
reg localB_10_we0;
reg localB_11_ce0;
reg localB_11_we0;
reg localB_12_ce0;
reg localB_12_we0;
reg localB_13_ce0;
reg localB_13_we0;
reg localB_14_ce0;
reg localB_14_we0;
reg localB_15_ce0;
reg localB_15_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] exitcond11567_reg_497;
reg   [0:0] empty_30_reg_505;
reg    ap_predicate_op27_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] exitcond11567_fu_373_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    systolic_blk_n_R;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond11567_reg_497_pp0_iter1_reg;
wire   [3:0] empty_29_fu_385_p1;
reg   [3:0] empty_29_reg_501;
reg   [3:0] empty_29_reg_501_pp0_iter1_reg;
wire   [0:0] empty_30_fu_389_p2;
reg   [0:0] empty_30_reg_505_pp0_iter1_reg;
reg   [3:0] tmp_17_reg_509;
reg   [3:0] tmp_17_reg_509_pp0_iter1_reg;
reg   [511:0] systolic_addr_read_reg_514;
reg    ap_condition_exit_pp0_iter1_stage0;
reg   [511:0] ap_phi_mux_empty_27_phi_fu_350_p4;
wire   [511:0] ap_phi_reg_pp0_iter2_empty_27_reg_347;
wire   [511:0] shiftreg2_cast_fu_419_p1;
wire   [63:0] p_cast9_fu_454_p1;
reg   [479:0] shiftreg2_fu_120;
wire    ap_loop_init;
reg   [8:0] loop_index7_fu_124;
wire   [8:0] empty_fu_379_p2;
reg   [8:0] ap_sig_allocacmp_loop_index7_load;
wire   [31:0] empty_28_fu_424_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

mmult_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond11567_fu_373_p2 == 1'd0))) begin
            loop_index7_fu_124 <= empty_fu_379_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            loop_index7_fu_124 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shiftreg2_fu_120 <= 480'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            shiftreg2_fu_120 <= {{ap_phi_mux_empty_27_phi_fu_350_p4[511:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        empty_29_reg_501_pp0_iter1_reg <= empty_29_reg_501;
        empty_30_reg_505_pp0_iter1_reg <= empty_30_reg_505;
        exitcond11567_reg_497 <= exitcond11567_fu_373_p2;
        exitcond11567_reg_497_pp0_iter1_reg <= exitcond11567_reg_497;
        tmp_17_reg_509_pp0_iter1_reg <= tmp_17_reg_509;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond11567_fu_373_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_29_reg_501 <= empty_29_fu_385_p1;
        empty_30_reg_505 <= empty_30_fu_389_p2;
        tmp_17_reg_509 <= {{ap_sig_allocacmp_loop_index7_load[7:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op27_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        systolic_addr_read_reg_514 <= m_axi_systolic_RDATA;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond11567_fu_373_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond11567_reg_497 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond11567_reg_497_pp0_iter1_reg == 1'd0)) begin
        if ((empty_30_reg_505_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_empty_27_phi_fu_350_p4 = shiftreg2_cast_fu_419_p1;
        end else if ((empty_30_reg_505_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_empty_27_phi_fu_350_p4 = systolic_addr_read_reg_514;
        end else begin
            ap_phi_mux_empty_27_phi_fu_350_p4 = ap_phi_reg_pp0_iter2_empty_27_reg_347;
        end
    end else begin
        ap_phi_mux_empty_27_phi_fu_350_p4 = ap_phi_reg_pp0_iter2_empty_27_reg_347;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_loop_index7_load = 9'd0;
    end else begin
        ap_sig_allocacmp_loop_index7_load = loop_index7_fu_124;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_10_ce0 = 1'b1;
    end else begin
        localB_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_10_we0 = 1'b1;
    end else begin
        localB_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_11_ce0 = 1'b1;
    end else begin
        localB_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_11_we0 = 1'b1;
    end else begin
        localB_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_12_ce0 = 1'b1;
    end else begin
        localB_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_12_we0 = 1'b1;
    end else begin
        localB_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_13_ce0 = 1'b1;
    end else begin
        localB_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_13_we0 = 1'b1;
    end else begin
        localB_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_14_ce0 = 1'b1;
    end else begin
        localB_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_14_we0 = 1'b1;
    end else begin
        localB_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_15_ce0 = 1'b1;
    end else begin
        localB_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_15_we0 = 1'b1;
    end else begin
        localB_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_1_ce0 = 1'b1;
    end else begin
        localB_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_1_we0 = 1'b1;
    end else begin
        localB_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_2_ce0 = 1'b1;
    end else begin
        localB_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_2_we0 = 1'b1;
    end else begin
        localB_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_3_ce0 = 1'b1;
    end else begin
        localB_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_3_we0 = 1'b1;
    end else begin
        localB_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_4_ce0 = 1'b1;
    end else begin
        localB_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_4_we0 = 1'b1;
    end else begin
        localB_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_5_ce0 = 1'b1;
    end else begin
        localB_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_5_we0 = 1'b1;
    end else begin
        localB_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_6_ce0 = 1'b1;
    end else begin
        localB_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_6_we0 = 1'b1;
    end else begin
        localB_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_7_ce0 = 1'b1;
    end else begin
        localB_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_7_we0 = 1'b1;
    end else begin
        localB_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_8_ce0 = 1'b1;
    end else begin
        localB_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_8_we0 = 1'b1;
    end else begin
        localB_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_9_ce0 = 1'b1;
    end else begin
        localB_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_9_we0 = 1'b1;
    end else begin
        localB_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_ce0 = 1'b1;
    end else begin
        localB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_29_reg_501_pp0_iter1_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localB_we0 = 1'b1;
    end else begin
        localB_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op27_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_systolic_RREADY = 1'b1;
    end else begin
        m_axi_systolic_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op27_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        systolic_blk_n_R = m_axi_systolic_RVALID;
    end else begin
        systolic_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_predicate_op27_read_state2 == 1'b1) & (m_axi_systolic_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_predicate_op27_read_state2 == 1'b1) & (m_axi_systolic_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op27_read_state2 == 1'b1) & (m_axi_systolic_RVALID == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter2_empty_27_reg_347 = 'bx;

always @ (*) begin
    ap_predicate_op27_read_state2 = ((empty_30_reg_505 == 1'd1) & (exitcond11567_reg_497 == 1'd0));
end

assign empty_28_fu_424_p1 = ap_phi_mux_empty_27_phi_fu_350_p4[31:0];

assign empty_29_fu_385_p1 = ap_sig_allocacmp_loop_index7_load[3:0];

assign empty_30_fu_389_p2 = ((empty_29_fu_385_p1 == 4'd0) ? 1'b1 : 1'b0);

assign empty_fu_379_p2 = (ap_sig_allocacmp_loop_index7_load + 9'd1);

assign exitcond11567_fu_373_p2 = ((ap_sig_allocacmp_loop_index7_load == 9'd256) ? 1'b1 : 1'b0);

assign localB_10_address0 = p_cast9_fu_454_p1;

assign localB_10_d0 = empty_28_fu_424_p1;

assign localB_11_address0 = p_cast9_fu_454_p1;

assign localB_11_d0 = empty_28_fu_424_p1;

assign localB_12_address0 = p_cast9_fu_454_p1;

assign localB_12_d0 = empty_28_fu_424_p1;

assign localB_13_address0 = p_cast9_fu_454_p1;

assign localB_13_d0 = empty_28_fu_424_p1;

assign localB_14_address0 = p_cast9_fu_454_p1;

assign localB_14_d0 = empty_28_fu_424_p1;

assign localB_15_address0 = p_cast9_fu_454_p1;

assign localB_15_d0 = empty_28_fu_424_p1;

assign localB_1_address0 = p_cast9_fu_454_p1;

assign localB_1_d0 = empty_28_fu_424_p1;

assign localB_2_address0 = p_cast9_fu_454_p1;

assign localB_2_d0 = empty_28_fu_424_p1;

assign localB_3_address0 = p_cast9_fu_454_p1;

assign localB_3_d0 = empty_28_fu_424_p1;

assign localB_4_address0 = p_cast9_fu_454_p1;

assign localB_4_d0 = empty_28_fu_424_p1;

assign localB_5_address0 = p_cast9_fu_454_p1;

assign localB_5_d0 = empty_28_fu_424_p1;

assign localB_6_address0 = p_cast9_fu_454_p1;

assign localB_6_d0 = empty_28_fu_424_p1;

assign localB_7_address0 = p_cast9_fu_454_p1;

assign localB_7_d0 = empty_28_fu_424_p1;

assign localB_8_address0 = p_cast9_fu_454_p1;

assign localB_8_d0 = empty_28_fu_424_p1;

assign localB_9_address0 = p_cast9_fu_454_p1;

assign localB_9_d0 = empty_28_fu_424_p1;

assign localB_address0 = p_cast9_fu_454_p1;

assign localB_d0 = empty_28_fu_424_p1;

assign m_axi_systolic_ARADDR = 64'd0;

assign m_axi_systolic_ARBURST = 2'd0;

assign m_axi_systolic_ARCACHE = 4'd0;

assign m_axi_systolic_ARID = 1'd0;

assign m_axi_systolic_ARLEN = 32'd0;

assign m_axi_systolic_ARLOCK = 2'd0;

assign m_axi_systolic_ARPROT = 3'd0;

assign m_axi_systolic_ARQOS = 4'd0;

assign m_axi_systolic_ARREGION = 4'd0;

assign m_axi_systolic_ARSIZE = 3'd0;

assign m_axi_systolic_ARUSER = 1'd0;

assign m_axi_systolic_ARVALID = 1'b0;

assign m_axi_systolic_AWADDR = 64'd0;

assign m_axi_systolic_AWBURST = 2'd0;

assign m_axi_systolic_AWCACHE = 4'd0;

assign m_axi_systolic_AWID = 1'd0;

assign m_axi_systolic_AWLEN = 32'd0;

assign m_axi_systolic_AWLOCK = 2'd0;

assign m_axi_systolic_AWPROT = 3'd0;

assign m_axi_systolic_AWQOS = 4'd0;

assign m_axi_systolic_AWREGION = 4'd0;

assign m_axi_systolic_AWSIZE = 3'd0;

assign m_axi_systolic_AWUSER = 1'd0;

assign m_axi_systolic_AWVALID = 1'b0;

assign m_axi_systolic_BREADY = 1'b0;

assign m_axi_systolic_WDATA = 512'd0;

assign m_axi_systolic_WID = 1'd0;

assign m_axi_systolic_WLAST = 1'b0;

assign m_axi_systolic_WSTRB = 64'd0;

assign m_axi_systolic_WUSER = 1'd0;

assign m_axi_systolic_WVALID = 1'b0;

assign p_cast9_fu_454_p1 = tmp_17_reg_509_pp0_iter1_reg;

assign shiftreg2_cast_fu_419_p1 = shiftreg2_fu_120;

endmodule //mmult_mmult_Pipeline_2
