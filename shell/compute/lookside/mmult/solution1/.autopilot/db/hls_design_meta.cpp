#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_local_block", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_local_deadlock", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_systolic_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_systolic_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_systolic_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_systolic_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_systolic_AWLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_systolic_AWSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_systolic_AWBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_systolic_AWLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_systolic_AWCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_systolic_AWPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_systolic_AWQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_systolic_AWREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_systolic_AWUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_systolic_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_systolic_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_systolic_WDATA", 512, hls_out, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_systolic_WSTRB", 64, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_systolic_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_systolic_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_systolic_WUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_systolic_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_systolic_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_systolic_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_systolic_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_systolic_ARLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_systolic_ARSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_systolic_ARBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_systolic_ARLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_systolic_ARCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_systolic_ARPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_systolic_ARQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_systolic_ARREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_systolic_ARUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_systolic_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_systolic_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_systolic_RDATA", 512, hls_in, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_systolic_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_systolic_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_systolic_RUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_systolic_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_systolic_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_systolic_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_systolic_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_systolic_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_systolic_BUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("work_id_out_stream_din", 32, hls_out, 1, "ap_fifo", "fifo_data", 1),
	Port_Property("work_id_out_stream_full_n", 1, hls_in, 1, "ap_fifo", "fifo_status", 1),
	Port_Property("work_id_out_stream_write", 1, hls_out, 1, "ap_fifo", "fifo_update", 1),
	Port_Property("a", 64, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("b", 64, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("c", 64, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("a_row", 32, hls_in, 5, "ap_vld", "in_data", 1),
	Port_Property("a_row_ap_vld", 1, hls_in, 5, "ap_vld", "in_vld", 1),
	Port_Property("a_col", 32, hls_in, 6, "ap_vld", "in_data", 1),
	Port_Property("a_col_ap_vld", 1, hls_in, 6, "ap_vld", "in_vld", 1),
	Port_Property("b_col", 32, hls_in, 7, "ap_vld", "in_data", 1),
	Port_Property("b_col_ap_vld", 1, hls_in, 7, "ap_vld", "in_vld", 1),
	Port_Property("work_id", 32, hls_in, 8, "ap_vld", "in_data", 1),
	Port_Property("work_id_ap_vld", 1, hls_in, 8, "ap_vld", "in_vld", 1),
};
const char* HLS_Design_Meta::dut_name = "mmult";
